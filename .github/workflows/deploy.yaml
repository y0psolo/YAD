name: Reusable deploy workflow

on:
  workflow_call:
    inputs:
      ubuntu:
        description: 'list of ubuntu version to run on'
        default: '[18.04, 20.04]'
        type: string
      arch:
        description: 'list of arch to run on'
        default: '[x86_64, arm64]'
        type: string
      copt:
        description: 'list of compile option to run on'
        default: '[opt, dbg]'
        type: string
      action:
        description: 'name of the action : build or run'
        default: 'build'
        type: string
      target:
        description: 'Target on wich to apply tu action'
        required: true
        type: string
    secrets:
      login:
        required: false
      password:
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ubuntu: ${{ inputs.ubuntu }}
        arch: ${{ inputs.arch }}
        copt: ${{ inputs.copt }}
    steps:
      - name: Free space
        run : |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - name: Setup repository
        uses: actions/checkout@v2
      - name: Setup Bazelisk
        uses: bazelbuild/setup-bazelisk@v1
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Mount bazel cache
        uses: actions/cache@v2
        with:
          path: "~/.cache/bazel"
          key: ${{ runner.os }}-bazel-base-${{ matrix.arch }}-${{ matrix.copt }}-${{ matrix.ubuntu }}-${{ hashFiles('**/BUILD', '**/*.bzl', 'WORKSPACE') }}
      - name: Docker Login
        if: ${{ inputs.action  == 'run' }}
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.login }}
          password: ${{ secrets.password }}
      - name: bazel publish
        run: |
          bazel ${{ inputs.action }} --config ${{ matrix.arch }} -c ${{ matrix.copt }} --distro=${{ matrix.ubuntu }} ${{ inputs.target }}